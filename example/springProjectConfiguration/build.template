//-------------------------------Plugins-------------------------------

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'tomcat'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

//------------------------General Configuration------------------------

defaultTasks 'tasks'

group='%basepackage%'
version = "1.0"
archivesBaseName = project.name

sourceCompatibility = 1.6
targetCompatibility = 1.6
webAppDirName = 'WebContent'

dependencies {
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${TOMCAT_VERSION}"
    tomcat "org.apache.tomcat.embed:tomcat-embed-logging-juli:${TOMCAT_VERSION}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${TOMCAT_VERSION}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }

    compile "org.springframework:spring-context:${SPRING_VERSION}"
	compile "org.springframework:spring-context-support:${SPRING_VERSION}"
    compile "org.springframework:spring-tx:${SPRING_VERSION}"
    compile "org.springframework:spring-beans:${SPRING_VERSION}"
    compile "org.springframework:spring-webmvc:${SPRING_VERSION}"
    compile "org.springframework:spring-web:${SPRING_VERSION}"
    compile "org.springframework:spring-jdbc:${SPRING_VERSION}"
    compile "org.springframework:spring-orm:${SPRING_VERSION}"
	compile "org.springframework.data:spring-data-jpa:1.4.2.RELEASE"
	compile 'org.eclipse.persistence:javax.persistence:2.1.0'
	compile "org.hibernate:hibernate-entitymanager:4.2.7.Final"
	compile "org.hibernate:hibernate-validator:5.0.1.Final"
	compile 'mysql:mysql-connector-java:5.1.27'
	compile 'javax.mail:mail:1.4.7'
	
    // Jackson use to convert java <-> json
    compile "org.codehaus.jackson:jackson-core-asl:${JACKSON_VERSION}"
    compile "org.codehaus.jackson:jackson-mapper-asl:${JACKSON_VERSION}"
    compile 'javax.el:el-api:2.2'
    providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
    compile 'mysql:mysql-connector-java:5.1.25'
    compile 'org.apache.tomcat:tomcat-jdbc:7.0.47'

}

buildscript {
    repositories {
		mavenCentral()
    }
    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:0.9.8' // required
    }
}

repositories {
	mavenCentral()
}

//--------------------------------Tasks--------------------------------

//modifications to accomodate web project.
task mainClean(type:Delete) {
    delete 'WebContent/WEB-INF/classes'
    clean.dependsOn mainClean
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.7'
}

task "create-dirs" << {
    new File('WebContent').mkdirs()
    new File('WebContent/theme').mkdirs()
    new File('WebContent/images').mkdirs()
    new File('WebContent/scripts').mkdirs()
    new File('WebContent/WEB-INF').mkdirs()
   sourceSets*.java.srcDirs*.each { it.mkdirs() }
   sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

//-------------------------Main SourceSet------------------------------

//modifications to accomodate web project.
sourceSets {
    main {
        output.classesDir = 'WebContent/WEB-INF/classes'
        output.resourcesDir = 'WebContent/WEB-INF/classes'
    }
}

//------------------------Plugins Configuration------------------------

tomcatRun {
    httpPort = 8086
    stopPort = 8087
    stopKey = 'stop'
    daemon = true // comment this out when running an instance of tomcat inside the command prompt
}

tomcatStop {
    stopPort = 8087
    stopKey = 'stop'
}

jar { manifest.attributes provider: group }

eclipse {
    wtp {
        component {
            sourceDirs += file('src/main/java')
            sourceDirs += file('src/main/resources')
        }
    }
}
